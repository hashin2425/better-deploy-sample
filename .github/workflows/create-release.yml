name: "[Auto] Create Release"

permissions:
  contents: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      deployment_notes:
        required: false
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Get release count for today
        id: release_count
        run: |
          count=$(git tag -l "v${{ steps.date.outputs.date }}-*" | wc -l)
          next_count=$(printf "%02d" $((count + 1)))
          echo "count=$next_count" >> $GITHUB_OUTPUT

      - name: Set version
        id: version
        run: echo "version=v${{ steps.date.outputs.date }}-${{ steps.release_count.outputs.count }}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$last_tag" ]; then
            changes=$(git log --pretty=format:"- %s" --no-merges)
          else
            changes=$(git log ${last_tag}..HEAD --pretty=format:"- %s" --no-merges)
          fi
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$changes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            Release of version ${{ steps.version.outputs.version }}

            Deployment Notes:
            ${{ inputs.deployment_notes }}

            Changes in this release:
            ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: true
          prerelease: false
